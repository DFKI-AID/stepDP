openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Aquachat stepDP API"
  description: "This is the API provided by Aquachat stepDP"
  
externalDocs:
  description: Aquachat stepDP Documentation (DFKI intern)
  url: http://stepdp.sb.dfki.de

servers:
  - url: http://localhost:50000
  - url: http://localhost:60000

components:
  schemas:
    AddKnowledge:
      type: "object"
      properties:
        uuid:
          description: "mandatory: User UUID"
          type: "string"
          format: uuid
        term:
          description: "mandatory: term of Knowledge"
          type: "string"
        confidence:
          description: "optional: Confidence of Knowledge ('low', 'medium', 'high')"
          type: "string"

    RemoveKnowledge:
      type: "object"
      properties:
        uuid:
          description: "mandatory: User UUID"
          type: "string"
          format: uuid
        term:
          description: "mandatory: term of Knowledge"
          type: "string"


  
        
paths:
  /user/uuidByName/{name}:
    get:
      summary: returns uuids of all users with the given name
      description: ''
      tags:
        - User
      operationId: UserUUIDByName
      parameters:
        - in: path
          name: name
          schema:
            type: "string"
          required: true
          description: name alias of the user
      responses:
        '200':
          description: UUIDs returned
          content:
            application/json:
              schema:
                type: array
                items:
                  type: "string"
                  format: "uuid"
  /user/uuids:
    get:
      summary: returns uuids of all users
      description: ''
      tags:
        - User
      operationId: UserUUIDs
      responses: 
        '200':
          description: UUIDs returned
          content:
            application/json:
              schema:
                type: array
                items:
                  type: "string"
                  format: "uuid"
  /user/current:
    get:
      summary: returns uuid of current user
      description: ''
      tags: 
        - User
      operationId: UserCurrent
      responses: 
        '200':
          description: user returned
          content: 
            application/json:
              schema: 
                type: "string"
                format: "uuid"
  /user/info/{uuid}:
    get:
      summary: returns user object with the given uuid as JSON-String
      description: ''
      tags:
        - User
      operationId: UserInfo
      parameters:
        - in: path
          name: uuid
          schema:
            type: "string"
            format: "uuid"
          required: true
          description: name alias of the user
      responses:
        '200':
          description: user info returned
          content: 
            application/json:
              schema: 
                type: "string"
  /user/addKnown:
    post:
      summary: adds Knowledge as known in the specified user
      description: ''
      tags: 
        - User
      operationId: UserAddKnown
      requestBody:
        description: uuid, term, confidence
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/AddKnowledge'
      responses:
        '200':
          description: Knowledge has been added
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  result:
                    type: "boolean"
  /user/addUnknown:
    post:
      summary: adds Knowledge as unknown in the specified user
      description: ''
      tags: 
        - User
      operationId: UserAddUnknown
      requestBody:
        description: uuid, term, confidence
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/AddKnowledge'
      responses:
        '200':
          description: Knowledge has been added
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  result:
                    type: "boolean"
  /user/removeKnown:
    post:
      summary: removes known Knowledge from the specified user
      description: ''
      tags: 
        - User
      operationId: UserRemoveKnown
      requestBody:
        description: uuid, term
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/RemoveKnowledge'
      responses:
        '200':
          description: Knowledge has been removed
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  result:
                    type: "boolean"
  /user/removeUnnown:
    post:
      summary: removes unknown Knowledge from the specified user
      description: ''
      tags: 
        - User
      operationId: UserRemoveUnknown
      requestBody:
        description: uuid, term
        required: true
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/RemoveKnowledge'
      responses:
        '200':
          description: Knowledge has been removed
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  result:
                    type: "boolean"
  /user/reset:
    post:
      summary: resets Knowledge and History of User, keeps Name and UUID
      description: ''
      tags: 
        - User
      operationId: UserReset
      requestBody: 
        description: user uuid
        content: 
          application/json:
            schema:
              type: "object"
              properties:
                uuid:
                  type: "string"
                  format: "uuid"
      responses:
        '200':
          description: User has ben resetted
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  result:
                    type: "boolean"
  /user/delete:
    post:
      summary: deletes User
      description: ''
      tags: 
        - User
      operationId: UserDelete
      requestBody: 
        description: user uuid
        content: 
          application/json:
            schema:
              type: "object"
              properties:
                uuid:
                  type: "string"
                  format: "uuid"
      responses:
        '200':
          description: User has been deleted
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  result:
                    type: "boolean"
  /user/new:
    post:
      summary: creates new user
      description: ''
      tags: 
        - User
      operationId: UserNew
      requestBody: 
        description: uuid and name (both optional)
        content: 
          application/json:
            schema:
              type: "object"
              properties:
                uuid:
                  description: Optional UUID for new User (must be unique)
                  type: "string"
                  format: "uuid"
                name:
                  description: Optional name for new User
                  type: "string"
      responses:
        '200':
          description: User has been created
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  result:
                    type: "boolean"